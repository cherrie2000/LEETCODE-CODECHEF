//1765. Map of Highest Peak

class Solution {
public:
    vector<vector<int>> highestPeak(vector<vector<int>>& isWater) {
        queue<pair<int,int>> q;
        int row=isWater.size(), col=isWater[0].size();
        vector<vector<bool>> vis(row,vector<bool>(col,false));
        for(int i=0;i<row;i++){
            for(int j=0;j<col;j++){
                if(isWater[i][j]==1) {q.push({i,j}); isWater[i][j]=0; vis[i][j]=true;}
            }
        }

        vector<vector<int>> dir={{0,1},{0,-1},{-1,0},{1,0}};

        while(!q.empty()){
            int size=q.size();
           
            auto top=q.front(); q.pop();
            int r = top.first, c=top.second;
            for(auto it:dir){
                int x = r+it[0], y= c+it[1];
                if(x<0 || x>=row || y<0 || y>=col || vis[x][y]) continue;
                isWater[x][y]=isWater[r][c]+1;
                vis[x][y]=true;
                q.push({x,y});
            
            }
        }
        return isWater;
    }
};
