//207. Course Schedule

class Solution {
public:
    bool canFinish(int numCourses, vector<vector<int>>& preq) {
        unordered_map<int,vector<int>> mp;
        vector<int> indeg(numCourses,0);
        int row = preq.size();//, col=preq[0].size(); cout<<row<<" ";
        if(row==0) return true;
        for(auto it:preq){
            mp[it[0]].push_back(it[1]);
            indeg[it[1]]++;
        }
        vector<int> vis(numCourses,0);
        queue<int>q;
        for(int i=0;i<numCourses;i++) {
            if(indeg[i]==0) q.push(i);
        }

        while(!q.empty()){
            int top=q.front();
            vis[top]=1;
            q.pop(); 
            for(auto it:mp[top]){
               indeg[it]--;
               if(indeg[it]==0) q.push(it);
            }
        }

        for(auto it:vis){
            if(it==0) return false;
        }
        return true;
    }
};
