// 1105. Filling Bookcase Shelves

class Solution {
public:
int dp[1002];
int solve(vector<vector<int>>& books, int shelfWidth, int id){
    if(id>=books.size()) return 0;

    if(dp[id]!=-1) return dp[id];
    int width=0, maxHeight=0; int ans=INT_MAX;
    for(int i=id;i<books.size();i++){
      width+=books[i][0];
      maxHeight= max(maxHeight,books[i][1]);
      if(width>shelfWidth) break;
        int temp = maxHeight+solve(books,shelfWidth,i+1);
        ans=min(ans,temp);
      
    }
    return dp[id]=ans;
}
    int minHeightShelves(vector<vector<int>>& books, int shelfWidth) {
        memset(dp,-1,sizeof(dp));
        return solve(books,shelfWidth,0);
    }
};
